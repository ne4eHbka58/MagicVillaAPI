// <auto-generated />
using System;
using MagicVilla_VillaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_VillaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250513182826_AddVillaNumberForeignKey")]
    partial class AddVillaNumberForeignKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "",
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1374),
                            Details = "Some text about this Royal beautiful Villa",
                            ImageUrl = "",
                            Name = "Royal Villa",
                            Occupancy = 5,
                            Rate = 200.0,
                            Sqft = 550,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Pool",
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1378),
                            Details = "Some details about this Pool Villa",
                            ImageUrl = "",
                            Name = "Pool Villa",
                            Occupancy = 4,
                            Rate = 150.0,
                            Sqft = 450,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Access to the ocean",
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1381),
                            Details = "Villa with access to the ocean",
                            ImageUrl = "",
                            Name = "Ocean Villa",
                            Occupancy = 2,
                            Rate = 100.0,
                            Sqft = 250,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "Near the beach",
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1383),
                            Details = "Villa near the beach",
                            ImageUrl = "",
                            Name = "Beach Villa",
                            Occupancy = 4,
                            Rate = 180.0,
                            Sqft = 500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "Royal pool",
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1386),
                            Details = "Royal Villa with a big pool",
                            ImageUrl = "",
                            Name = "Royal Pool Villa",
                            Occupancy = 7,
                            Rate = 260.0,
                            Sqft = 750,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.VillaNumber", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaID")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaID");

                    b.ToTable("VillaNumbers");

                    b.HasData(
                        new
                        {
                            VillaNo = 501,
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1526),
                            SpecialDetails = "Room with facilities for the disabled",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VillaID = 0
                        },
                        new
                        {
                            VillaNo = 502,
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1528),
                            SpecialDetails = "Big room",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VillaID = 0
                        },
                        new
                        {
                            VillaNo = 503,
                            CreatedDate = new DateTime(2025, 5, 13, 21, 28, 25, 856, DateTimeKind.Local).AddTicks(1530),
                            SpecialDetails = "Big bath",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VillaID = 0
                        });
                });

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.VillaNumber", b =>
                {
                    b.HasOne("MagicVilla_VillaAPI.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
